# Configuration Claudyne.com
# Optimisée pour performance mobile Cameroun

# ================================
# Redirection HTTP vers HTTPS
# ================================
server {
    listen 80;
    server_name claudyne.com www.claudyne.com;

    # Gestion Let's Encrypt ACME Challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirection forcée vers HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# ================================
# Configuration HTTPS Principal
# ================================
server {
    listen 443 ssl http2;
    server_name claudyne.com www.claudyne.com;

    # ================================
    # SSL Configuration
    # ================================
    ssl_certificate /etc/letsencrypt/live/claudyne.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/claudyne.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/claudyne.com/chain.pem;

    # SSL moderne et sécurisé
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # SSL Session Cache optimisé
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # ================================
    # Headers spéciaux pour Cameroun
    # ================================

    # Optimisation mobile
    add_header X-UA-Compatible "IE=edge" always;
    add_header X-Mobile-Optimized "1" always;

    # Cache DNS optimisé pour réseaux lents
    add_header X-DNS-Prefetch-Control "on" always;

    # Préconnexion APIs critiques
    add_header Link "</api/health>; rel=prefetch" always;

    # ================================
    # Frontend Static Files
    # ================================

    # Interface principale
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache agressif pour les fichiers statiques
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";

            # Compression préalable si disponible
            gzip_static on;

            # Headers pour CDN/cache
            add_header X-Cache-Status "HIT" always;
        }

        # Cache HTML modéré
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public";
            etag on;
        }

        # Fallback SPA pour interfaces
        try_files $uri $uri/ /index.html;
    }

    # ================================
    # API Backend avec Rate Limiting
    # ================================

    location /api/ {
        # Rate limiting différencié
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts optimisés mobile
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Headers pour API
        add_header X-API-Version "1.0" always;
        add_header X-Response-Time $request_time always;

        # Cache sélectif pour certains endpoints
        location ~* /api/(subjects|lessons|static) {
            expires 5m;
            add_header Cache-Control "public";
            proxy_cache_valid 200 5m;
        }
    }

    # Rate limiting spécial pour authentification
    location /api/auth/ {
        limit_req zone=login burst=5 nodelay;

        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Sécurité renforcée
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Rate limiting spécial pour paiements
    location /api/payments/ {
        limit_req zone=payment burst=10 nodelay;

        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Sécurité maximale pour paiements
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    }

    # ================================
    # Uploads et médias
    # ================================

    location /uploads/ {
        alias /var/www/uploads/;

        # Cache très long pour les médias
        expires 1y;
        add_header Cache-Control "public, immutable";

        # Sécurité uploads
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }

        # Optimisation images pour mobile
        add_header X-Content-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
    }

    # ================================
    # Health Check
    # ================================

    location /health {
        proxy_pass http://backend/health;
        proxy_set_header Host $host;

        # Pas de cache pour health check
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        access_log off;
    }

    # ================================
    # Sécurité - Blocage des accès
    # ================================

    # Bloquer les bots malveillants
    location ~* (wp-admin|wp-login|xmlrpc|admin|phpmyadmin) {
        deny all;
        return 444;
    }

    # Bloquer les extensions dangereuses
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
        return 444;
    }

    # ================================
    # Monitoring et métriques
    # ================================

    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        allow 172.20.0.0/16;  # Réseau Docker
        deny all;
        access_log off;
    }

    # ================================
    # Gestion des erreurs personnalisées
    # ================================

    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}