#!/bin/bash

# Configuration
BACKUP_DIR="/var/backups/claudyne/sqlite"
SOURCE_DB="/var/www/claudyne/backend/database/claudyne.sqlite"
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="$BACKUP_DIR/claudyne_backup_$DATE.sqlite"

echo "üîÑ Backup SQLite: $DATE"

# V√©rifier si DB source existe
if [ ! -f "$SOURCE_DB" ]; then
    # Chercher le vrai fichier SQLite
    SOURCE_DB=$(find /var/www/claudyne/backend -name "*.sqlite" -type f | head -1)
    if [ -z "$SOURCE_DB" ]; then
        echo "‚ùå Aucune base SQLite trouv√©e"
        exit 1
    fi
    echo "üìç Base trouv√©e: $SOURCE_DB"
fi

# Backup avec sqlite3 (garantit coh√©rence)
if command -v sqlite3 &> /dev/null; then
    sqlite3 "$SOURCE_DB" ".backup '$BACKUP_FILE'"
    echo "‚úÖ Backup SQLite cr√©√©: $BACKUP_FILE"
else
    # Fallback: copie simple
    cp "$SOURCE_DB" "$BACKUP_FILE"
    echo "‚úÖ Backup simple cr√©√©: $BACKUP_FILE"
fi

# Compression pour √©conomiser espace
gzip "$BACKUP_FILE"
echo "üóúÔ∏è Backup compress√©: $BACKUP_FILE.gz"

# Nettoyer anciens backups (garder 7 jours)
find "$BACKUP_DIR" -name "*.gz" -mtime +7 -delete
echo "üßπ Anciens backups nettoy√©s"

# Sync vers PostgreSQL si configur√©
if [ -f /var/www/claudyne/scripts/sync-to-postgresql.sh ]; then
    bash /var/www/claudyne/scripts/sync-to-postgresql.sh
fi
